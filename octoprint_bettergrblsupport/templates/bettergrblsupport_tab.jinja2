
<div class="settings">
  <form class="form-horizontal">
    <div class="settings-group">
      <div class="settings-controls">
        <div class="input-append">
          <label class="settings-label">Length</label>
          <input type="number" step="1.0"
                               class="input-mini text-right"
                               data-bind="value: length"
                               placeholder="100">
          <span class="add-on">mm</span>
        </div>
      </div>
      <label class="settings-label">Width</label>
      <div class="settings-controls">
        <div class="input-append">
          <input type="number" step="1.0"
                               class="input-mini text-right"
                               data-bind="value: width"
                               placeholder="100">
          <span class="add-on">mm</span>
        </div>
      </div>
    </div>
  </form>
</div>

<div id="webcam_rotator_frame" data-bind="css: { webcam_rotated: settings.webcam_rotate90(), webcam_unrotated: !settings.webcam_rotate90() }" class="webcam_unrotated">
            <div class="webcam_fixed_ratio ratio169" data-bind="css: webcamRatioClass">
                <div class="webcam_fixed_ratio_inner">
                    <img id="webcam_image" data-bind="css: { flipH: settings.webcam_flipH(), flipV: settings.webcam_flipV() }, event: { load: onWebcamLoaded, error: onWebcamErrored }, visible: !webcamError()" class="flipH flipV" src="/webcam/?action=stream&amp;1553445782374">
                </div>
            </div>
			</div>
		</div>
</div>

<div>
	<div class="row-fluid btn-group" style="text-align: center;padding-top: 20px;">
		<button class="btn" data-bind="click: function() {doFrame()}">FRAME</button>
	</div>
</div>
